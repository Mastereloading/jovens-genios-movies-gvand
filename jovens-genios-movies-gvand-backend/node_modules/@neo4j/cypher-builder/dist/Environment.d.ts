import { Param } from "./variables/Param";
import type { NamedReference, Reference } from "./variables/Reference";
export declare type EnvPrefix = {
    params?: string;
    variables?: string;
};
/** Hold the internal references of Cypher parameters and variables */
export declare class CypherEnvironment {
    private readonly globalPrefix;
    private references;
    private params;
    constructor(prefix?: string | EnvPrefix);
    getReferenceId(reference: Reference | NamedReference): string;
    getParams(): Record<string, any>;
    addNamedParamReference(name: string, param: Param): void;
    addExtraParams(params: Record<string, Param>): void;
    getParamsSize(): number;
    getReferences(): Map<Reference, string>;
    private addParam;
    private addVariableReference;
    private isNamedReference;
}
//# sourceMappingURL=Environment.d.ts.map
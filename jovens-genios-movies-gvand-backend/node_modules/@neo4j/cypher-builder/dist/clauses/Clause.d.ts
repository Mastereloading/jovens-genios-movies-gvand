import { CypherASTNode } from "../CypherASTNode";
import { EnvPrefix } from "../Environment";
import type { CypherResult } from "../types";
declare const customInspectSymbol: unique symbol;
/** Represents a clause AST node */
export declare abstract class Clause extends CypherASTNode {
    /** Compiles a clause into Cypher and params */
    build(prefix?: string | EnvPrefix | undefined, extraParams?: Record<string, any>): CypherResult;
    private getEnv;
    toString(): string;
    [customInspectSymbol](): string;
}
export {};
//# sourceMappingURL=Clause.d.ts.map
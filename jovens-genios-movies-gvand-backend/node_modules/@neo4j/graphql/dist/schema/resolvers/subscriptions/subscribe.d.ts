import type Node from "../../../classes/Node";
import type { SubscriptionsEvent } from "../../../types";
import type { SubscriptionContext } from "./types";
export declare function subscriptionResolve(payload: [SubscriptionsEvent]): SubscriptionsEvent;
declare type SubscriptionArgs = {
    where?: Record<string, any>;
};
export declare function generateSubscribeMethod(node: Node, type: "create" | "update" | "delete" | "connect" | "disconnect"): (_root: any, args: SubscriptionArgs, context: SubscriptionContext) => AsyncIterator<[SubscriptionsEvent]>;
export {};
//# sourceMappingURL=subscribe.d.ts.map
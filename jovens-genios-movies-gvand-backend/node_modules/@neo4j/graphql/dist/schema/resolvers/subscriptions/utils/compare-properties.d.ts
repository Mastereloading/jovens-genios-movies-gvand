import type Node from "../../../../classes/Node";
import type { RelationshipSubscriptionsEvent } from "../../../../types";
/**
 * Returns true if all properties in obj1 exists in obj2, false otherwise.
 * Properties can only be primitives or Array<primitive>
 */
export declare function compareProperties(obj1: Record<string, any>, obj2: Record<string, any>): boolean;
/** Returns true if receivedProperties comply with filters specified in whereProperties, false otherwise. */
export declare function filterByProperties<T>(node: Node, whereProperties: Record<string, T | Array<Record<string, T>>>, receivedProperties: Record<string, T>): boolean;
export declare function filterRelationshipConnectionsByProperties<T>(node: Node, whereProperties: Record<string, T | Record<string, T>>, receivedEvent: RelationshipSubscriptionsEvent): boolean;
//# sourceMappingURL=compare-properties.d.ts.map
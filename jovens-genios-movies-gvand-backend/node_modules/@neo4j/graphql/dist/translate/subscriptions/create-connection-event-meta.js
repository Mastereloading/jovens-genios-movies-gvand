"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConnectionEventMetaObject = exports.createConnectionEventMeta = void 0;
const constants_1 = require("../../constants");
function createConnectionEventMeta(params) {
    return `${constants_1.META_CYPHER_VARIABLE} + ${createConnectionEventMetaObject(params)} AS ${constants_1.META_CYPHER_VARIABLE}`;
}
exports.createConnectionEventMeta = createConnectionEventMeta;
function createConnectionEventMetaObject({ event, relVariable, fromVariable, toVariable, typename, fromTypename, toTypename, }) {
    const idsAndProperties = createEventMetaIdsAndProperties({ relVariable, fromVariable, toVariable });
    return `{ event: "${event}", ${idsAndProperties}, timestamp: timestamp(), relationshipName: "${typename}", fromTypename: "${fromTypename}", toTypename: "${toTypename}" }`;
}
exports.createConnectionEventMetaObject = createConnectionEventMetaObject;
function createEventMetaIdsAndProperties({ relVariable, fromVariable, toVariable, }) {
    const projectAllProperties = (varName) => `${varName} { .* }`;
    const idsStr = `id_from: id(${fromVariable}), id_to: id(${toVariable}), id: id(${relVariable})`;
    const propertiesStr = `properties: { from: ${projectAllProperties(fromVariable)}, to: ${projectAllProperties(toVariable)}, relationship: ${projectAllProperties(relVariable)} }`;
    return [idsStr, propertiesStr].join(", ");
}
//# sourceMappingURL=create-connection-event-meta.js.map
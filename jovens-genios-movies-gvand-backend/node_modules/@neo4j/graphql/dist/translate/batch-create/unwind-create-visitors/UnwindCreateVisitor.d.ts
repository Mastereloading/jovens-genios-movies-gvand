import type { Context } from "../../../types";
import type { CallbackBucket } from "../../../classes/CallbackBucket";
import type { Visitor, ICreateAST, INestedCreateAST } from "../GraphQLInputAST/GraphQLInputAST";
import Cypher from "@neo4j/cypher-builder";
declare type UnwindCreateScopeDefinition = {
    unwindVar: Cypher.Variable;
    parentVar: Cypher.Variable;
    clause?: Cypher.Clause;
};
declare type GraphQLInputASTNodeRef = string;
declare type UnwindCreateEnvironment = Record<GraphQLInputASTNodeRef, UnwindCreateScopeDefinition>;
export declare class UnwindCreateVisitor implements Visitor {
    unwindVar: Cypher.Variable;
    callbackBucket: CallbackBucket;
    context: Context;
    rootNode: Cypher.Node | undefined;
    clause: Cypher.Clause | undefined;
    environment: UnwindCreateEnvironment;
    constructor(unwindVar: Cypher.Variable, callbackBucket: CallbackBucket, context: Context);
    visitCreate(create: ICreateAST): void;
    visitNestedCreate(nestedCreate: INestedCreateAST): void;
    build(): [Cypher.Node?, Cypher.Clause?];
}
export {};
//# sourceMappingURL=UnwindCreateVisitor.d.ts.map
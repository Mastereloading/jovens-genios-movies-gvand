"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAggregateOperation = void 0;
const create_aggregate_where_and_params_1 = __importDefault(require("../../create-aggregate-where-and-params"));
const cypher_builder_1 = __importDefault(require("@neo4j/cypher-builder"));
/** Translates an atomic aggregation operation */
function createAggregateOperation({ relationField, context, value, parentNode, }) {
    const refNode = context.nodes.find((x) => x.name === relationField.typeMeta.name);
    const relationship = context.relationships.find((x) => x.properties === relationField.properties);
    const aggregateStatement = new cypher_builder_1.default.RawCypher((env) => {
        const varName = env.getReferenceId(parentNode);
        // TODO: use cypher builder instead of rawCypher
        const aggregateWhereAndParams = (0, create_aggregate_where_and_params_1.default)({
            node: refNode,
            chainStr: "aggr",
            context,
            field: relationField,
            varName,
            aggregation: value,
            relationship,
        });
        return aggregateWhereAndParams;
    });
    return aggregateStatement;
}
exports.createAggregateOperation = createAggregateOperation;
//# sourceMappingURL=create-aggregate-operation.js.map